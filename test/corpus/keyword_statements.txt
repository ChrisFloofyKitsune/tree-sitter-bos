================
basic statements
================
function() {
    call-script func_name();
    callScript func_name(1);

    start-script func_name();
    startScript func_name();

    signal 1;

    set-signal-mask 1;
    setSignalMask 1;

    sleep 100;

    set var_name to 100;
}

----------------

(source_file
    (function_declaration
        name: (identifier)
        body: (compound_statement
            (call_script_statement
                function: (identifier)
                arguments: (argument_list))
            (call_script_statement
                function: (identifier)
                arguments: (argument_list
                    (number_literal)))
            (start_script_statement
                function: (identifier)
                arguments: (argument_list))
            (start_script_statement
                function: (identifier)
                arguments: (argument_list))
            (signal_statement
                argument: (number_literal))
            (set_signal_mask_statement
                argument: (number_literal))
            (set_signal_mask_statement
                argument: (number_literal))
            (sleep_statement
                argument: (number_literal))
            (set_statement
                argument: (identifier)
                argument: (number_literal)))))

====================
animation statements
====================

function() {
    spin windmill around x-axis speed <50.0>;
    spin windmill around x-axis speed <50.0> accelerate <1>;
    stop-spin windmill around x-axis;

    turn turret to y-axis <0.0> speed <50.0>;

    move lbarrel to z-axis [-2.400000] speed [500.0];

    wait-for-turn turret around y-axis;
    waitForTurn turret around y-axis;

    wait-for-move lbarrel along z-axis;
    waitForMove lbarrel along z-axis;

    hide emit;
    show emit;
}

----------------

(source_file
    (function_declaration
        name: (identifier)
        body: (compound_statement
            (spin_statement
                piece: (identifier)
                axis: (axis)
                argument: (degree_constant
                    (number_literal)))
            (spin_statement
                piece: (identifier)
                axis: (axis)
                argument: (degree_constant
                    (number_literal))
                argument: (degree_constant
                    (number_literal)))
            (stop_spin_statement
                piece: (identifier)
                axis: (axis))
            (turn_statement
                piece: (identifier)
                axis: (axis)
                argument: (degree_constant
                    (number_literal))
                argument: (degree_constant
                    (number_literal)))
            (move_statement
                piece: (identifier)
                axis: (axis)
                argument: (linear_constant
                    (number_literal))
                argument: (linear_constant
                    (number_literal)))
            (wait_for_turn_statement
                piece: (identifier)
                axis: (axis))
            (wait_for_turn_statement
                piece: (identifier)
                axis: (axis))
            (wait_for_move_statement
                piece: (identifier)
                axis: (axis))
            (wait_for_move_statement
                piece: (identifier)
                axis: (axis))
            (hide_statement
                piece: (identifier))
            (show_statement
                piece: (identifier)))))

==========================
special effects statements
==========================

function() {
    emit-sfx 1024 + 0 from flare2;
    emitSfx 1024 + 0 from flare2;

    emit-sfx smoketype from base;
    emitSfx smoketype from base;

    explode torsocoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
    explode heatraycoil type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
    explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
    explode frthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
}

--------------------------

(source_file
    (function_declaration
        name: (identifier)
        body: (compound_statement
            (emit_sfx_statement
                argument: (binary_expression
                    left: (number_literal)
                    right: (number_literal))
                piece: (identifier))
            (emit_sfx_statement
                argument: (binary_expression
                    left: (number_literal)
                    right: (number_literal))
                piece: (identifier))
            (emit_sfx_statement
                argument: (identifier)
                piece: (identifier))
            (emit_sfx_statement
                argument: (identifier)
                piece: (identifier))
            (explode_statement
                piece: (identifier)
                argument: (binary_expression
                    left: (binary_expression
                        left: (binary_expression
                            left: (binary_expression
                                left: (identifier)
                                right: (identifier))
                            right: (identifier))
                        right: (identifier))
                    right: (identifier)))
            (explode_statement
                piece: (identifier)
                argument: (binary_expression
                    left: (binary_expression
                        left: (binary_expression
                            left: (binary_expression
                                left: (identifier)
                                right: (identifier))
                            right: (identifier))
                        right: (identifier))
                    right: (identifier)))
            (explode_statement
                piece: (identifier)
                argument: (binary_expression
                    left: (binary_expression
                        left: (binary_expression
                            left: (binary_expression
                                left: (identifier)
                                right: (identifier))
                            right: (identifier))
                        right: (identifier))
                    right: (identifier)))
            (explode_statement
                piece: (identifier)
                argument: (binary_expression
                    left: (binary_expression
                        left: (binary_expression
                            left: (binary_expression
                                left: (identifier)
                                right: (identifier))
                            right: (identifier))
                        right: (identifier))
                    right: (identifier))))))
